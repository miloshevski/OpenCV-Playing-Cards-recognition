import subprocess
import sys
import json
from pathlib import Path
import shutil

def run_pipeline(image_path: str) -> list[str]:
    if not Path(image_path).exists():
        raise FileNotFoundError(f"‚ùå –ù–µ –ø–æ—Å—Ç–æ–∏ —Å–ª–∏–∫–∞—Ç–∞: {image_path}")

    # –ö–æ—Ä–∏—Å—Ç–∏ –∏—Å—Ç–∞—Ç–∞ Python –ø–∞—Ç–µ–∫–∞ (.venv)
    py = sys.executable

    # –ò—Å—á–∏—Å—Ç–∏ —Å—Ç–∞—Ä–∏ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏
    for folder in ["out_cards", "crops"]:
        f = Path(folder)
        if f.exists() and f.is_dir():
            shutil.rmtree(f)
        f.mkdir(parents=True, exist_ok=True)

    print("1Ô∏è‚É£ –î–µ—Ç–µ–∫—Ç–∏—Ä–∞—ö–µ –Ω–∞ –∫–∞—Ä—Ç–∏...")
    subprocess.run([
        py, "cards_otsu_detect.py", image_path,
        "--warp-dir", "out_cards",
        "--mask-out", "mask.png",
        "--panel-out", "panel.jpg"
    ], check=True)

    print("\n2Ô∏è‚É£ –ß–∏—Ç–∞—ö–µ –Ω–∞ –∏–Ω–¥–µ–∫—Å–∏ (—Ä–∞–Ω–≥ –∏ –±–æ—ò–∞)...")
    subprocess.run([
        py, "read_indices_from_out_cards_v2.py",
        "--roi_w", "0.18",
        "--roi_h", "0.312",
        "--split_y", "0.568",
        "--left_band", "0.48",
        "--max_rel_area", "0.15",
        "--min_area", "19",
        "--debug"
    ], check=True)

    print("\n3Ô∏è‚É£ –ò–∑–≤–ª–µ–∫—É–≤–∞—ö–µ binarized crops (rank/suit)...")
    subprocess.run([py, "extract_crops_and_predict.py"], check=True)

    print("\n4Ô∏è‚É£ –°–µ—á–µ—ö–µ –∏ —Ü–µ–Ω—Ç—Ä–∏—Ä–∞—ö–µ –Ω–∞ crops...")
    subprocess.run([py, "seci.py"], check=True)

    print("\n5Ô∏è‚É£ –ü—Ä–µ–ø–æ–∑–Ω–∞–≤–∞—ö–µ –∫–∞—Ä—Ç–∏ –æ–¥ crops...")
    subprocess.run([py, "match_all.py"], check=True)

    # –ü—Ä–æ—á–∏—Ç–∞—ò JSON —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ (–ø—Ä. –æ–¥ match_all.py)
    results_path = Path("final_cards.json")
    if not results_path.exists():
        raise FileNotFoundError("‚ùå –ù–µ —Å–µ –ø—Ä–æ–Ω–∞—ò–¥–µ–Ω–∏ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ –æ–¥ match_all.py (final_cards.json)")

    with open(results_path, "r", encoding="utf-8") as f:
        cards = json.load(f)

    return cards  # –ø—Ä–∏–º–µ—Ä: ["7c", "As", "10d"]

# –ê–∫–æ –≥–æ –ø–æ–≤–∏–∫—É–≤–∞—à –æ–¥ —Ç–µ—Ä–º–∏–Ω–∞–ª:
if __name__ == "__main__":
    detected = run_pipeline(sys.argv[1])
    print("\nüÇ† –î–µ—Ç–µ–∫—Ç–∏—Ä–∞–Ω–∏ –∫–∞—Ä—Ç–∏:", ", ".join(detected))
