import subprocess
import sys
import os
from pathlib import Path

# 1. –í–∞–ª–∏–¥–∞—Ü–∏—ò–∞ –Ω–∞ –∞—Ä–≥—É–º–µ–Ω—Ç
image_path = sys.argv[1] if len(sys.argv) > 1 else None
if not image_path or not Path(image_path).exists():
    # print("‚ùå –í–Ω–µ—Å–∏ –ø–æ—Å—Ç–æ–µ—á–∫–∞ .jpg —Å–ª–∏–∫–∞: python main.py test.jpg")
    sys.exit(1)

# 2. –ö–æ—Ä–∏—Å—Ç–∏ –∏—Å—Ç–∞—Ç–∞ Python –ø–∞—Ç–µ–∫–∞ (–æ–¥ .venv)
py = sys.executable

# 3. –ë—Ä–∏—à–µ—ö–µ –Ω–∞ .jpg/.png —Å–ª–∏–∫–∏ –æ–¥ –¥–∞–¥–µ–Ω–∞ –ø–∞–ø–∫–∞
def clear_images(folder: str, name: str):
    path = Path(folder)
    count = 0
    extensions = [".jpg", ".png", ".jpeg", ".webp"]
    if path.exists():
        for file in path.iterdir():
            if file.suffix.lower() in extensions:
                try:
                    file.unlink()
                    count += 1
                except Exception as e:
                    print(f"‚ùå –ù–µ –º–æ–∂–µ –¥–∞ —Å–µ –∏–∑–±—Ä–∏—à–µ {file.name}: {e}")
        # print(f"üßπ –ò–∑–±—Ä–∏—à–∞–Ω–∏ —Å–µ {count} —Å–ª–∏–∫–∏ –æ–¥ {folder}/ ({name})")

# 4. –ß–∏—Å—Ç–µ—ö–µ –Ω–∞ –ø–∞–ø–∫–∏
clear_images("out_cards", "warped cards")
clear_images("_debug_indices", "debug –∏–Ω–¥–µ–∫—Å–∏")
clear_images("crops", "binarized crops")  # <--- –Ω–æ–≤–æ

# 5. –ß–µ–∫–æ—Ä 1: –î–µ—Ç–µ–∫—Ç–∏—Ä–∞—ö–µ –Ω–∞ –∫–∞—Ä—Ç–∏
# print("1Ô∏è‚É£ –î–µ—Ç–µ–∫—Ç–∏—Ä–∞—ö–µ –Ω–∞ –∫–∞—Ä—Ç–∏...")
subprocess.run([
    py, "cards_otsu_detect.py", image_path,
    "--warp-dir", "out_cards",
    "--mask-out", "mask.png",
    "--panel-out", "panel.jpg"
])

# 6. –ß–µ–∫–æ—Ä 2: –ß–∏—Ç–∞—ö–µ –Ω–∞ –∏–Ω–¥–µ–∫—Å–∏
# print("\n2Ô∏è‚É£ –ß–∏—Ç–∞—ö–µ –Ω–∞ –∏–Ω–¥–µ–∫—Å–∏ (—Ä–∞–Ω–≥ –∏ –±–æ—ò–∞)...")
subprocess.run([
    py, "read_indices_from_out_cards_v2.py",
    "--roi_w", "0.18",
    "--roi_h", "0.312",
    "--split_y", "0.568",
    "--left_band", "0.48",
    "--max_rel_area", "0.15",
    "--min_area", "19",
    "--debug"
])

# 7. –ß–µ–∫–æ—Ä 3
# print("\n3Ô∏è‚É£ –ò–∑–≤–ª–µ–∫—É–≤–∞—ö–µ binarized crops (rank/suit)...")
subprocess.run([py, "extract_crops_and_predict.py"])

# 8. –ß–µ–∫–æ—Ä 4
# print("\n4Ô∏è‚É£ –°–µ—á–µ—ö–µ –∏ —Ü–µ–Ω—Ç—Ä–∏—Ä–∞—ö–µ –Ω–∞ crops...")
subprocess.run([py, "seci.py"])

# 9. –ß–µ–∫–æ—Ä 5
# print("\n5Ô∏è‚É£ –ü—Ä–µ–ø–æ–∑–Ω–∞–≤–∞—ö–µ –∫–∞—Ä—Ç–∏ –æ–¥ crops...")
subprocess.run([py, "match_all.py"])
